#!/usr/bin/env bash
#
# Script to update AWS Route53 hostname with the public IP of a host.
#
# Modified from https://github.com/th0mi/ddns

set -o errexit
set -o nounset

# URL for IP check service
declare -r CHECK_IP_URL="https://icanhazip.com"
# Public DNS server to check if IP needs to be updated
declare -r PUBLIC_DNS="8.8.8.8"
# Temp file to store aws change batch file
declare -r TMPFILE=$(mktemp /tmp/awsdns.XXXXXXXXXXXXX)

# Check for required programs
declare -a REQUIRED_PROGRAMS=( aws curl )
for program in ${REQUIRED_PROGRAMS[@]}; do
  hash $program || (echo "$program is required but was not found"; exit 1)
done;

# Make sure we have all required env variables
declare -a REQUIRED_ENVS=( AWS_ZONE_ID DYN_HOST )
for req_env in ${REQUIRED_ENVS[@]}; do
  [[ -n ${!req_env:-} ]] || (echo "$req_env environment variable is required but not found"; exit 1)
done

# Get public IP according to service like icanhazip.com
CURRENT_IP=$(curl --silent ${CHECK_IP_URL})
# Check that curl result actually looks like an IP
if [[ ! ${CURRENT_IP} =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then
  echo "${CURRENT_IP} does not appear to be a valid IP"
  exit 1
fi

# Get existing IP from a public DNS server
# Exit if unable to query PUBLIC_DNS server
PUBLIC_IP=$(dig +short $DYN_HOST @$PUBLIC_DNS) ||
  (echo "Unable to query ${PUBLIC_DNS}: ${PUBLIC_IP}"; exit 1)

# Exit cleanly if IP is still current
if [ "${CURRENT_IP}" == "${PUBLIC_IP}" ]; then
   echo "${PUBLIC_IP} is current, no update needed"
   exit 0
fi

echo "Updating IP to ${CURRENT_IP} @ $(date)"

# Create the AWS update record
cat <<UPDATE-JSON > $TMPFILE
{
  "Comment": "dyndns",
  "Changes": [
    {
      "Action": "UPSERT",
      "ResourceRecordSet": {
        "Name": "$DYN_HOST",
        "Type": "A",
        "TTL": 300,
        "ResourceRecords": [
          {
            "Value": "$CURRENT_IP"
          }
        ]
      }
    }
  ]
}
UPDATE-JSON

# Use aws cli to update record
aws route53 change-resource-record-sets --hosted-zone-id $AWS_ZONE_ID --change-batch file://$TMPFILE

# Delete temp file
rm -f $TMPFILE
